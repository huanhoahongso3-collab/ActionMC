# # If you need help with the configuration or have any questions related to Sponge,
# # join us on Discord or drop by our forums and leave a post.
# 
# # Discord: https://discord.gg/sponge
# # Forums: https://forums.spongepowered.org/

# Active configuration version
# This has no relation to the current Sponge version, and will be updated automatically
# Manual changes may cause unpredictable results.
version=4
general {
    # The directory for Sponge plugin configurations, relative to the
    # execution root or specified as an absolute path.
    # Note that the default: "${CONFIG_DIR}"
    # is going to use the "config" directory in the root game directory.
    # If you wish for plugin configs to reside within a child of the configuration
    # directory, change the value to, for example, "${CONFIG_DIR}/sponge/plugins".
    # Note: It is not recommended to set this to "${CONFIG_DIR}/sponge", as there is
    # a possibility that plugin configurations can conflict the Sponge core configurations.
    plugin-config-dir="${CONFIG_DIR}"
}
commands {
    # Command aliases will resolve conflicts when multiple plugins request a specific command, 
    # Correct syntax is <unqualified command>=<plugin name> e.g. "sethome=homeplugin"
    aliases {}
}
modules {
    # Enables support for BungeeCord and Velocity IP forwarding.
    # Additional options must be configured in the 'ip-forwarding' configuration section.
    ip-forwarding=false
    entity-activation-range=true
    # Controls whether any exploit patches are applied.
    # If there are issues with any specific exploits, please
    # test in the exploit category first, before disabling all
    # exploits with this toggle.
    exploits=true
    optimizations=true
    # Allows configuring Vanilla movement and speed checks
    movement-checks=false
}
ip-sets {}
ip-forwarding {
    # The IP forwarding mode to use with a proxy. Supported values:
    #   - NONE: Do not forward IP addresses
    #   - LEGACY: Use the BungeeCord/pre-1.13 protocol for IP forwarding (CAUTION: This protocol is insecure)
    #   - MODERN: Use the Velocity protocol for IP forwarding
    # When any forwarding mode but NONE is selected, the server will be put into offline mode and will only accept connections from proxies.
    mode=NONE
    # The player info forwarding secret from your Velocity configuration.
    # Only used with 'MODERN' forwarding mode.
    secret=""
}
exploits {
    # Controls the maximum size of a book page. (Default: 32767)
    max-book-page-size=32767
    # Controls the maximum size of a book
    max-book-size=32767000
}
optimizations {
    # Caches tameable entities owners to avoid constant lookups against data watchers. If mods 
    # cause issues, disable this.
    cache-tameable-owners=true
    # Bells will store references of nearby entities when rang.
    # The entity list is never cleared, thus leaking memory until
    # the chunk is unloaded. Since the entity list is reused if the
    # bell is rang again within 60 ticks, this provides an option to
    # clear the list if it is not needed anymore.
    bell-leak-fix=true
    # By default, Vanilla 'warms-up' all migration rules for
    # every Minecraft version when the game starts. This often
    # causes a period of extremely high CPU usage when the game
    # starts, often for no benefit since the typical pattern is
    # that most chunks do not have to be migrated, or only have
    # to be migrated from just a few versions. This option disables
    # migration rules from being 'warmed-up' and instead forces them
    # to be generated on demand. This is a very safe optimization and
    # should usually remain enabled.
    enable-lazydfu=true
}
phase-tracker {
    # If 'true', the phase tracker will print out when there are too many phases 
    # being entered, usually considered as an issue of phase re-entrance and 
    # indicates an unexpected issue of tracking phases not to complete. 
    # If this is not reported yet, please report to Sponge. If it has been 
    # reported, you may disable this.
    verbose=true
    # If 'true', the phase tracker will dump extra information about the current phases 
    # when certain non-PhaseTracker related exceptions occur. This is usually not necessary, as the information 
    # in the exception itself can normally be used to determine the cause of the issue
    verbose-errors=false
    # If set to 'true', when a mod or plugin attempts to spawn an entity 
    # off the main server thread, Sponge will automatically 
    # capture said entity to spawn it properly on the main 
    # server thread. The catch to this is that some mods are 
    # not considering the consequences of spawning an entity 
    # off the server thread, and are unaware of potential race 
    # conditions they may cause. If this is set to false, 
    # Sponge will politely ignore the entity being spawned, 
    # and emit a warning about said spawn anyways.
    capture-async-spawning-entities=true
    # If 'true', more thorough debugging for PhaseStates 
    # such that a StackTrace is created every time a PhaseState 
    # switches, allowing for more fine grained troubleshooting 
    # in the cases of runaway phase states. Note that this is 
    # not extremely performant and may have some associated costs 
    # with generating the stack traces constantly.
    generate-stack-trace-per-phase=false
    # If verbose is not enabled, this restricts the amount of 
    # runaway phase state printouts, usually happens on a server 
    # where a PhaseState is not completing. Although rare, it should 
    # never happen, but when it does, sometimes it can continuously print 
    # more and more. This attempts to placate that while a fix can be worked on 
    # to resolve the runaway. If verbose is enabled, they will always print.
    maximum-printed-runaway-counts=3
    # The maximum number of times to recursively process transactions in a single phase.
    # Some mods may interact badly with Sponge's block capturing system, causing Sponge to
    # end up capturing block transactions every time it tries to process an existing batch.
    # Due to the recursive nature of the depth-first processing that Sponge uses to handle block transactions,
    # this can result in a stack overflow, which causes us to lose all information about the original cause of the issue.
    # To prevent a stack overflow, Sponge tracks the current processing depth, and aborts processing when it exceeds
    # this threshold.
    # The default value should almost always work properly -  it's unlikely you'll ever have to change it.
    max-block-processing-depth=1000
    # If true, when a mod attempts to perform a neighbor notification
    # on a block, some mods do not know to perform a 'null' check
    # on the source block of their TileEntity. This usually goes by
    # unnoticed by other mods, because they may perform '==' instance
    # equality checks instead of calling methods on the potentially
    # null Block, but Sponge uses the block to build information to
    # help tracking. This has caused issues in the past. Generally,
    # this can be useful for leaving "true" so a proper report is
    # generated once for your server, and can be reported to the
    # offending mod author.
    # This is 'false' by default in SpongeVanilla.
    # Review the following links for more info:
    #  https://gist.github.com/gabizou/ad570dc09dfed259cac9d74284e78e8b
    #  https://github.com/SpongePowered/SpongeForge/issues/2787
    # 
    report-null-source-blocks-on-neighbor-notifications=false
    # A mapping that is semi-auto-populating for TileEntities whose types
    # are found to be providing "null" Block sources as neighbor notifications
    # that end up causing crashes or spam reports. If the value is set to 
    # "true", then a "workaround" will be attempted. If not, the 
    # 
    # current BlockState at the target source will be queried from the world.
    # This map having a specific
    # entry of a TileEntity will prevent a log or warning come up to any logs
    # when that "null" arises, and Sponge will self-rectify the TileEntity
    # by calling the method "getBlockType()". It is advised that if the mod
    # id in question is coming up, that the mod author is notified about the
    # error-prone usage of the field "blockType". You can refer them to
    # the following links for the issue:
    #  https://gist.github.com/gabizou/ad570dc09dfed259cac9d74284e78e8b
    #  https://github.com/SpongePowered/SpongeForge/issues/2787
    # Also, please provide them with these links for the example PR to
    # fix the issue itself, as the fix is very simple:
    # https://github.com/TehNut/Soul-Shards-Respawn/pull/24
    # https://github.com/Epoxide-Software/Enchanting-Plus/pull/135
    # 
    auto-fix-null-source-block-providing-block-entities {}
}
# Blocks to blacklist for safe teleportation.
teleport-helper {
    # If 'true', this blacklist will always be respected, otherwise, plugins can choose whether 
    # or not to respect it.
    force-blacklist=false
    # Blocks that are listed here will not be selected by Sponge's safe 
    # teleport routine as a safe floor block.
    unsafe-floor-blocks=[]
    # Blocks that are listed here will not be selected by Sponge's safe teleport routine as 
    # a safe block for players to warp into. 
    # You should only list blocks here that are incorrectly selected, solid blocks that prevent 
    # movement are automatically excluded.
    unsafe-body-blocks=[]
}
# Enables server owners to require specific plugins to provide Sponge services
services {
    # Services specified here can be implemented by plugins. To ensure that aspecific plugin implements a given service, set the relevant option to itsplugin ID. If you wish to use Sponge's default for a given service, use'sponge' as the ID.
    # 
    # If the plugin ID is unknown, or the option is set to '?', all plugins willbe given the opportunity to register their service. If multiple pluginsattempt to register, one will be picked in an implementation dependent way.If no plugins attempt to register a service, the Sponge default will be usedif one exists.
    # 
    # No Sponge default service exists for the Economy service.
    plugins {
        # Specifies the plugin that will provide the ban service
        ban-service="?"
        # Specifies the plugin that will provide the context service
        context-service="?"
        # Specifies the plugin that will provide the economy service
        economy-service="?"
        # Specifies the plugin that will provide the pagination service
        pagination-service="?"
        # Specifies the plugin that will provide the permission service
        permission-service="?"
        # Specifies the plugin that will provide the whitelist service
        whitelist-service="?"
    }
}
debug {
    # Detect and prevent certain attempts to use entities concurrently. 
    # WARNING: May drastically decrease server performance. Only set this to 'true' to debug a pre-existing issue.
    concurrent-entity-checks=false
}
world {
    # The auto-save options used when saving global player data.
    player-auto-save {
        # The tick interval used to execute the auto save. 
        # Set to 0 to disable. (Default: 6000) 
        # Note: 20 ticks is equivalent to 1 second.
        interval=6000
        # The tick interval used to process the items in 
        # the auto save queue once the auto save has been triggered. 
        # Setting this to 0 will execute all of the tasks in the same tick. (Default: 0) 
        # Note: 20 ticks is equivalent to 1 second.
        batch-interval=0
        # The amount of items to process per batch. (Default: 1) 
        # Note: Has no effect if batch-interval is disabled.
        batch-amount=1
    }
    # If 'true', natural leaf decay is allowed.
    leaf-decay=true
    # The interval, in seconds, used by the GameProfileQueryTask to process queued GameProfile requests. (Default: 4) 
    # Note: This setting should be raised if you experience the following error: 
    # "The client has sent too many requests within a certain amount of time". 
    # Finally, if set to 0 or less, the default interval will be used.
    game-profile-lookup-task-interval=4
    # The list of uuid's that should never perform a lookup against Mojang's session server. 
    # Note: If you are using SpongeForge, make sure to enter any mod fake player's UUID to this list.
    invalid-lookup-uuids=[
        "00000000-0000-0000-0000-000000000000",
        "41c82c87-7afb-4024-ba57-13d2c99cae77"
    ]
}
